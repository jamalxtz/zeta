{
	// Place your zeta workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Criar notificação de alerta": {
	"scope": "javascript,typescript",
	"prefix": "notify",
	"body": [
		"Toast.fire({",
			"icon: 'error',",
			"title: msg.mensagem",
		"})",
	],
	"description": "Notificação de alerta"
	},
	"Requisiçao AJAX": {
		"scope": "javascript,typescript",
		"prefix": "ajax",
		"body": [
			"//Captura os valores dos campos",
			"let url = $('#idURL').val();",
			"let userID = $('#userID').val(); // ID do usuário logado",
			"let requisicao = 'excluirParcelaDespesa';",

			"let idDespesa = $('#txtDespesaID').val();",
			"let idParcela = $('#txtModalExcluirNumeroParcelaED').val();",

			"//Requisição Ajax para enviar os dados para o banco de dados",
			"$.ajax({",
			"  url : url,",
			"  type : 'post',",
			"  data : {",
			"  requisicao : requisicao,",
			"  userID : userID,",
			"  idDespesa : idDespesa,",
			"  idParcela : idParcela,",
			"},",
			"  dataType: 'json',",
			"  beforeSend : function(){",
			"    //alert(requisicao+' \n '+ url );",
			"    //console.log(data);",
			"  }",
			"})",
			".done(function(msg){",
			"  //alert(msg.mensagem);",
			"  if (msg.success == true){",
			"    PreencherCamposEditarDespesa();",
			"    //Exibe mensagem",
			"    Toast.fire({",
			"      icon: 'success',",
			"      title: msg.mensagem",
			"    })",
			"  }else{",
			"    //Exibe mensagem",
			"    Toast.fire({",
			"      icon: 'error',",
			"      title: msg.mensagem",
			"    })",
			"  }",
			"  console.log(msg);",
			"})",
			".fail(function(jqXHR, textStatus, msg){",
			"  alert('Erro ao excluir parcela: '+'\n'+jqXHR.responseText);",
			"  console.log('Erro ao excluir parcela: '+'\n'+jqXHR.responseText);",
			"});//Fim da requisição Ajax para enviar os dados para o banco de dados",
		],
			"description": "Requisição AJAX completa"
		},
		"Comparar Datas": {
			"scope": "javascript,typescript",
			"prefix": "datediff",
			"body": [
				"let dataVencimento = new Date(arrayDados[vencimento]);",
				"let dataAtual = new Date(DataAtual());",
				"//Para comparar datas iguais tem que acrescentar o + na frente das variaveis",
				"if(+dataVencimento === +dataAtual){",
				"  novaCelula.className = 'text-warning';",
				"}else if(dataVencimento < dataAtual){",
				"  novaCelula.className = 'text-danger';",
				"}",
			],
			"description": "Faz a comparação entre duas datas"
		},
		"Substring": {
			"scope": "javascript,typescript",
			"prefix": "subs",
			"body": [
				"let text = 'Hello world!';",
				"let result = text.substring(1, 4);",
			],
			"description": "Faz a comparação entre duas datas"
		},
		"Alert": {
			"scope": "javascript,typescript",
			"prefix": "aa",
			"body": [
				"alert($1);",
			],
			"description": "Faz a comparação entre duas datas"
		}
}

		